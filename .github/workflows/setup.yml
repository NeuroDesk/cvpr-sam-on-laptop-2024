name: initial setup

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  select-runner:
    runs-on: ubuntu-22.04
    outputs:
      runner: ${{ steps.select_runner.outputs.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Select runner
        id: select_runner
        run: |
          if [ "${{ github.repository }}" = "NeuroDesk/cvpr-sam-on-laptop-2024" ]; then
            echo "runner=self-hosted" >> $GITHUB_OUTPUT
          else
            echo "runner=ubuntu-22.04" >> $GITHUB_OUTPUT
          fi

  initial_setup:
    needs: [select-runner]
    runs-on: ${{ needs.select-runner.outputs.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      - name: Set up environment and data from osf
        run: |
          python -m pip install --upgrade pip
          python -m pip install osfclient
          osf --project u8tny fetch test_demo.tar.xz
          tar -xvf test_demo.tar.xz
          rm test_demo.tar.xz

      - name: Install Docker
        shell: bash
        run: |
          echo ${{ secrets.USERPWD }} | sudo -S apt-get update
          echo ${{ secrets.USERPWD }} | sudo -S apt-get install ca-certificates curl
          echo ${{ secrets.USERPWD }} | sudo -S install -m 0755 -d /etc/apt/keyrings
          echo ${{ secrets.USERPWD }} | sudo -S curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          echo ${{ secrets.USERPWD }} | sudo -S chmod a+r /etc/apt/keyrings/docker.asc
          
          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            echo ${{ secrets.USERPWD }} | sudo -S tee /etc/apt/sources.list.d/docker.list > /dev/null
          echo ${{ secrets.USERPWD }} | sudo -S apt-get update
          echo ${{ secrets.USERPWD }} | sudo -S apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          echo ${{ secrets.USERPWD }} | sudo -S docker run hello-world
          echo ${{ secrets.USERPWD }} | sudo -S  groupadd docker
          echo ${{ secrets.USERPWD }} | sudo -S  gpasswd -a cvpr docker
          newgrp docker 
          docker run hello-world
